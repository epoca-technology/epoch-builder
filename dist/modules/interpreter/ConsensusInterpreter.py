from typing import List, Tuple
from collections import Counter
from modules.types import IConsensusInterpreterConfig
from modules.interpreter.Interface import InterpreterInterface




class ConsensusInterpreter(InterpreterInterface):
    """ConsensusInterpreter Class

    This class takes the predictions generated by several different models and outputs a 
    result based on the minimum consensus required.

    Instance Properties:
        min_consensus: float
            The minimum number of models that must agree in order for a prediction to 
            result in non-neutral.
    """





    def __init__(self, config: IConsensusInterpreterConfig):
        """Initializes the Interpreter Class based on the provided configuration.

        Args:
            config: IConsensusInterpreterConfig
                The configuration to interpret predictions.
        """
        # Initialize the instance properties
        self.min_consensus: int = config["min_consensus"]









 



    def interpret(self, pred_results: List[int]) -> Tuple[int, str]:
        """Given a list of preditions generated by sub_models, will count each type
        and verify if it meets the minimum consensus for a non-neutral prediction result.
         1  =   Long
         0  =   Neutral
        -1  =   Short

        Args:
            pred_results: List[int]
                The list of prediction results generated by the sub_models.

        Returns:
            Tuple[int, str] 
            (1|0|-1, 'long'|'neutral'|'short')
        """
        # Initialize the counter
        counter = Counter(pred_results)
        
        # Return the packed results accordingly
        if counter[1] >= self.min_consensus:
            return 1, "long"
        elif counter[-1] >= self.min_consensus:
            return -1, "short"
        else:
            return 0, "neutral"







        






    def get_config(self) -> IConsensusInterpreterConfig:
        """Returns the interpreter's data after having been initialized.

        Returns:
            IConsensusInterpreterConfig
        """
        return { "min_consensus": self.min_consensus }