from typing import Tuple, Union
from modules.types import IPercentChangeInterpreterConfig, IProbabilityInterpreterConfig



# Interpreter Interface
# PercentageChangeInterpreter and ProbabilityInterpreter implement the following interface
# in order to ensure compatibility across any of the processes.
class InterpreterInterface:
    # Interprets a prediction that has been generated by a model. Even though the function 
    # arguments can vary depending on the type of interpreter, the output will always be the 
    # same. 
    # prediction_result (1|0|-1) , result_description ('long'|'neutral'|'short')
    def interpret(self, *args) -> Tuple[int, str]:
        raise NotImplementedError("Interpreter.interpret has not been implemented.")


    # Retrieves the configuration of the Interpreter after being initialized
    def get_config(self) -> Union[IPercentChangeInterpreterConfig, IProbabilityInterpreterConfig]:
        raise NotImplementedError("Interpreter.get_config has not been implemented.")






