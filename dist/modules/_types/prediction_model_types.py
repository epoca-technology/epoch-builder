from typing import TypedDict, List, Literal, Dict



############
## Assets ##
############





# Lookback Indexer
# The lookback indexer contains a dict with 1m candlestick open times as keys and 
# prediction candlestick indexes as values.
ILookbackIndexer: Dict[int, int]





# Test Dataset Labels
# A dict containing the list of labels (outcomes) within the test dataset. They are
# grouped by price change requirement in string format.
# It is also important to mention that they follow the adjusted prediction indexing
# and there may be less labels than features in some cases.
ITestDatasetLabel = Literal[0, 1]
ITestDatasetLabels = Dict[str, List[ITestDatasetLabel]]





# Test Dataset Features
# A dict containing the list of features within the test dataset. They are grouped
# by regression ID and follow the adjusted prediction indexing.
ITestDatasetFeatures = Dict[str, List[float]]










#####################
## Prediction Dict ##
#####################




# Prediction Result
#  1 = Long
# -1 = Short
#  0 = Neutral
IPredictionResult = Literal[1, -1, 0]




# Prediction
# The final prediction dict generated by the model. It contains the result, the time
# in which the prediction was made and the list of features used to come to the result.
class IPrediction(TypedDict):
    # Prediction result: -1 | 0 | 1
    r: IPredictionResult

    # The time in which the prediction was performed (milliseconds)
    t: int

    # The list of predicted features 
    f: List[float]








##################
## Interpreter  ##
##################












######################
## Prediction Model ##
######################




# Prediction Model Configuration
# 
class IPredictionModelConfig(TypedDict):
    # Identity of the Model.
    id: str