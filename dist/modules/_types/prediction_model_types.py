from typing import TypedDict, List, Literal, Dict



###################
## Configuration ##
###################



# Min Sum Function
# The prediction model's discovery calculates the means and the medians of the 
# successful predictions which then will be used to trade. For instance, If the 
# mean function is selected, the model will make use of the discovery's 
# increase_successful_mean and the decrease_successful_mean as the minimum sums
# in order to generate non-neutral predictions.
IMinSumFunction = Literal["mean", "median"]




# Regressions Per Model
# The number of regressions that are placed in the prediction model.
IRegressionsPerModel = Literal[4, 8, 16]





# Minified Configuration
# The minified configuration is used in order to narrow down the variations and
# identify which models lead to profitability.
class IPredictionModelMinifiedConfig(TypedDict):
    pcr: float              # Price Change Requirement
    msf: IMinSumFunction    # Min Sum Function
    ri: List[str]           # Regression IDs











############
## Assets ##
############





# Lookback Indexer
# The lookback indexer contains a dict with 1m candlestick open times as keys and 
# prediction candlestick indexes as values.
ILookbackIndexer = Dict[int, int]





# Test Dataset Labels
# A dict containing the list of labels (outcomes) within the test dataset. They are
# grouped by price change requirement in string format.
# It is also important to mention that they follow the adjusted prediction indexing
# and there may be less labels than features in some cases.
ITestDatasetLabel = Literal[0, 1]
ITestDatasetLabelKey = Literal["2.5", "3", "3.5"]
ITestDatasetLabels = Dict[ITestDatasetLabelKey, List[ITestDatasetLabel]]





# Test Dataset Features
# A dict containing the list of features within the test dataset. They are grouped
# by regression ID and follow the adjusted prediction indexing.
ITestDatasetFeatures = Dict[str, List[float]]










#####################
## Prediction Dict ##
#####################




# Prediction Result
#  1 = Long
# -1 = Short
#  0 = Neutral
IPredictionResult = Literal[1, -1, 0]




# Prediction
# The final prediction dict generated by the model. It contains the result, the time
# in which the prediction was made and the list of features used to come to the result.
class IPrediction(TypedDict):
    # Prediction result: -1 | 0 | 1
    r: IPredictionResult

    # The time in which the prediction was performed (milliseconds)
    t: int

    # The list of predicted features 
    f: List[float]








##################
## Interpreter  ##
##################












######################
## Prediction Model ##
######################




# Prediction Model Configuration
# 
class IPredictionModelConfig(TypedDict):
    # Identity of the Model.
    id: str