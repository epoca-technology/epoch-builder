from typing import TypedDict, Union







# Discovery
# The discovery dict contains the neccessary information for a model to
# to function and it is attached to it when saving.
class IDiscovery(TypedDict):
    # Details of the increase predictions
    increase_min: float
    increase_max: float

    # Details of the decrease predictions
    decrease_min: float
    decrease_max: float

    # Details of the successful predictions
    increase_successful_mean: float
    decrease_successful_mean: float

    # The mean of the successful increase and decrease means
    successful_mean: float




# Discovery Payload
# The payload contains all the information that was collected during the
# discovery. For performance reasons, the payload is only saved in the
# training certificate and not the model itself.
class IDiscoveryPayload(TypedDict):
    # If the discovery process is to be stopped for any reason, this property
    # will be string. If everything went well it will be None
    early_stopping: Union[str, None]

    # Predictions generated by the model as well as the actual outcomes. 
    # Notice that when a model predicts a value that is below the minimum, 
    # the prediction is considered to be neutral.
    neutral_num: int
    increase_num: int
    decrease_num: int
    increase_outcome_num: int
    decrease_outcome_num: int

    # The accuracy of the generated predictions
    increase_accuracy: float
    decrease_accuracy: float
    accuracy: float

    # Details of the increase predictions
    increase_min: float
    increase_max: float
    increase_mean: float

    # Details of the decrease predictions
    decrease_min: float
    decrease_max: float
    decrease_mean: float

    # Details of the successful predictions
    increase_successful_mean: float
    decrease_successful_mean: float

    # The mean of the successful increase and decrease means
    successful_mean: float







